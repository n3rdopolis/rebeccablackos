#! /bin/bash
#    Copyright (c) 2012 - 2023 nerdopolis (or n3rdopolis) <bluescreen_avenger@verzion.net>
#
#    This file is part of RebeccaBlackOS.
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 2 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.

#This script presents options when the loginmanagerdisplay crashes too many times

DIALOGUSER=daemon

#Require root privlages
if [[ $UID != 0 ]]
then
  echo "Must be run as root."
  exit
fi

#Ask the user what to do
while [[ $Option != 3 && $Option != 4 && $Option != 5 ]]
do
  Option=$(runuser -u $DIALOGUSER -- dialog --radiolist "What would you like to do?" 20 60 20 0 "View the greeter display manager log..." on 1 "View the waylandloginmanager log..." off 2 "Force or unforce software rendering" off 3 "Restart the system" off 4 "Exit this menu, switch to a login tty" off 5 "**Restart the waylandloginmanager service**" off --stdout 2>/dev/tty)
  if [[ $Option == 0 ]]
  then
    runuser -u $DIALOGUSER -- dialog --textbox /var/log/waylandloginmanager/loginmanagerdisplays/loginmanagerdisplay_seat0.log 500 500
  elif [[ $Option == 1 ]]
  then
    runuser -u $DIALOGUSER -- dialog --textbox /var/log/waylandloginmanager/waylandloginmanager.log 500 500
  elif [[ $Option == 2 ]]
  then
    rbos-force-softwarerendering
  elif [[ $Option == 3 ]]
  then
    runuser -u $DIALOGUSER -- dialog --msgbox "Will now restart..." 20 50
    dbus-send --print-reply --system --dest=org.freedesktop.login1 /org/freedesktop/login1 org.freedesktop.login1.Manager.Reboot boolean:true
    exit
  elif [[ $Option == 4 ]]
  then
    chvt 2
    exit
  elif [[ $Option == 5 ]]
  then
    systemctl stop waylandloginmanager.service
    systemctl stop wlm-loginmanagerdisplay_*.service
    systemctl start waylandloginmanager.service
  fi
  if [[ $Option != 3 && $Option != 4 && $Option != 5  ]]
  then
    runuser -u $DIALOGUSER -- dialog --no-ok --no-cancel --pause "Wait..." 8 14 1
  fi
done
