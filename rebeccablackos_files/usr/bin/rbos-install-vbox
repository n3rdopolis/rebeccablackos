#! /bin/bash
#    Copyright (c) 2012, 2013, 2014, 2015, 2016 nerdopolis (or n3rdopolis) <bluescreen_avenger@verzion.net>
#
#    This file is part of RebeccaBlackOS.
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 2 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.

#This file is to build Virtualbox drivers, and install it into Mesa in /opt.

#Require root privlages
if [[ $UID != 0 ]]
then
  echo "Must be run as root."
  exit
fi

#Install kernel headers
apt-get install linux-headers-$(uname -r)

if [[ ! -e /dev/disk/by-label/VBOXADDITIONS* ]]
then
echo "Please add the Virtualbox guest disk to the VM"
exit
fi

#Find a virtualbox additions install disk
VBOXDISK=$(find /dev/disk/by-label/VBOXADDITIONS* | tail -1)
#Find where a virtualbox additions install disk is mounted
VBOXMOUNT=$(findmnt -f -c -o TARGET -n $VBOXDISK)
#get the arch of the kernel
CPUARCH=$(uname -m)

#If the virtualbox is not mounted, mount it, and mark it to be unmounted when the script completes
if [[ -z $VBOXMOUNT ]]
then
  UNMOUNT=1
  mkdir /tmp/vboxmount
  mount $VBOXDISK /tmp/vboxmount
  VBOXMOUNT=/tmp/vboxmount
fi

#Extract, and build the drivers
mkdir /tmp/vboxinstall
cd /tmp/vboxinstall
$VBOXMOUNT/VBoxLinuxAdditions.run --keep --target .
tar -axf
if [[ $CPUARCH == i686 ]]
then
  tar -axf VBoxGuestAdditions-x86.tar.bz2
else 
  tar -axf VBoxGuestAdditions-amd64.tar.bz2
fi
cd src/vboxguest-*
. /usr/bin/build_vars
make

#If the disk was marked to be unmounted (because it was 'manually' mounted by the script), unmount it again
if [[ UNMOUNT == 1 ]]
then 
  umount /tmp/vboxmount
fi