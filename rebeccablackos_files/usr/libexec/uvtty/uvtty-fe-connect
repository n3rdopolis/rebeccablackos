#! /bin/bash
#    Copyright (c) 2012 - 2024 nerdopolis (or n3rdopolis) <bluescreen_avenger@verzion.net>
#
#    This file is part of RebeccaBlackOS.
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 2 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <https://www.gnu.org/licenses/>.

#This handles the connection to the main pty running the user shell, (this is run within the terminal emulator)

function PtyResizeEvent
{
  if [[ ! -e "$XDG_RUNTIME_DIR/uvtty/$UvTTYName/ptycommandproxy" ]]
  then
    Retries=0
    while [[ ! -e "$XDG_RUNTIME_DIR/uvtty/$UvTTYName/ptycommandproxy" ]]
    do
      $SLEEPCMD 1
      ((Retries++))
      if [[ $Retries -ge 5 ]]
      then
        return
      fi
    done
  fi

  #Wait for the terminal client to act when SIG_WINCH is sent before getting the size
  $SLEEPCMD .3
  ClientPTYSize=($(stty size))
  echo "s ${ClientPTYSize[0]} ${ClientPTYSize[1]}" > "$XDG_RUNTIME_DIR/uvtty/$UvTTYName/ptycommandproxy"
}

function UvTTYFeConnectMain
{
  UvTTYName=$1
  if [[ -z $UvTTYName ]]
  then
    echo "Incorrect arguments passed"
    exit 1
  fi

  PTYPath=$(tty)

  #Use bash builtin sleep if availible
  if [[ -f /usr/lib/bash/sleep ]]
  then
    enable -f /usr/lib/bash/sleep sleep
    SLEEPCMD="sleep"
  else
    SLEEPCMD="/bin/sleep"
  fi

  if [[ ${WAYLAND_DISPLAY:0:1} == "/" ]]
  then
    WAYLANDDISPLAYPATH=$WAYLAND_DISPLAY
  else
    WAYLANDDISPLAYPATH=$XDG_RUNTIME_DIR/$WAYLAND_DISPLAY
  fi
  rm $WAYLANDDISPLAYPATH

  #Resize events will be rare (it's fullscreen), but probably possible if a screen is swapped
  trap PtyResizeEvent WINCH

  #Wait for the socat socket to be created
  if [[ ! -e "$XDG_RUNTIME_DIR/uvtty/$UvTTYName/socatproxy" ]]
  then
    while [[ ! -e "$XDG_RUNTIME_DIR/uvtty/$UvTTYName/socatproxy" ]]
    do
      $SLEEPCMD 1
    done
  fi

  socat file:$PTYPath,raw,echo=0 unix-connect:"$XDG_RUNTIME_DIR/uvtty/$UvTTYName/socatproxy" &
  set -m
  SOCATPID=$!

  trap 'if [[ ! -e /proc/$SOCATPID ]]; then exit; fi' SIGCHLD
  PtyResizeEvent

  while [ 1 ]
  do
    wait $SOCATPID
    if [[ ! -e /proc/$SOCATPID ]]
      then exit
    fi
    $SLEEPCMD .1
  done

  exit
}

UvTTYFeConnectMain "$@"
