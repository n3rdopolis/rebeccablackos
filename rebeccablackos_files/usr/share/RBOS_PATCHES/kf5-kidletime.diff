diff --git a/CMakeLists.txt b/CMakeLists.txt
index 5335bd5..e1ff8e7 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -44,6 +44,7 @@ endif()
 if(X11_FOUND)
     find_package(XCB COMPONENTS XCB SYNC)
     find_package(X11_XCB)
+    set(HAVE_X11 TRUE)
     if (X11_XSync_FOUND AND XCB_XCB_FOUND AND X11_XCB_FOUND AND XCB_SYNC_FOUND)
         # One cannot just use "set(HAVE_XSYNC X11_XSync_FOUND AND XCB_XCB_FOUND...)"
         # Doing so would create a list because the value passed to set() is not evaluated.
@@ -63,6 +64,8 @@ if(X11_FOUND)
     if(NOT HAVE_XSCREENSAVER AND NOT HAVE_XSYNC)
         message(FATAL_ERROR "\nNeither the XSync (libXext) nor XScreensaver (libXss) development package was found.\nPlease install one of them (XSync is recommended)")
     endif()
+else()
+    set(HAVE_X11 FALSE)
 endif()
 
 # Subdirectories
diff --git a/src/config-kidletime.h.cmake b/src/config-kidletime.h.cmake
index d3f0cfd..4a1fafe 100644
--- a/src/config-kidletime.h.cmake
+++ b/src/config-kidletime.h.cmake
@@ -1,6 +1,10 @@
 /* config-kidletime.h. Generated by cmake from config-kidletime.h.cmake */
 
+/* Define if you have the XScreensaver extension */
 #cmakedefine01 HAVE_XSCREENSAVER
 
 /* Define if you have the XSync extension */
 #cmakedefine01 HAVE_XSYNC
+
+/* Define if you have X11 */
+#cmakedefine01 HAVE_X11
diff --git a/src/kidletime.cpp b/src/kidletime.cpp
index f38ae46..8241851 100644
--- a/src/kidletime.cpp
+++ b/src/kidletime.cpp
@@ -40,6 +40,9 @@
 
 #include <QPointer>
 #include <QSet>
+#if HAVE_X11
+#include <QX11Info>
+#endif
 
 class KIdleTimeHelper
 {
@@ -85,6 +88,11 @@ public:
 KIdleTime::KIdleTime()
     : QObject(0)
     , d_ptr(new KIdleTimePrivate())
+#if HAVE_X11
+    , m_isX11(QX11Info::isPlatformX11())
+#else
+    , m_isX11(false)
+#endif
 {
     Q_ASSERT(!s_globalKIdleTime()->q);
     s_globalKIdleTime()->q = this;
@@ -187,17 +195,29 @@ void KIdleTimePrivate::loadSystem()
 
 #if HAVE_XSYNC
 #if HAVE_XSCREENSAVER
-    if (XSyncBasedPoller::instance()->isAvailable()) {
-        poller = XSyncBasedPoller::instance();
+    if (m_isX11) {
+      if (XSyncBasedPoller::instance()->isAvailable()) {
+	  poller = XSyncBasedPoller::instance();
+      } else {
+	  poller = new XScreensaverBasedPoller();
+      }
     } else {
-        poller = new XScreensaverBasedPoller();
+      poller = new AbstractSystemPoller();
     }
 #else
-    poller = XSyncBasedPoller::instance();
+    if (m_isX11) {
+      poller = XSyncBasedPoller::instance();
+    } else {
+      poller = new AbstractSystemPoller();
+    }
 #endif
 #else
 #if HAVE_XSCREENSAVER
-    poller = new XScreensaverBasedPoller();
+    if (m_isX11) {
+      poller = new XScreensaverBasedPoller();
+    } else {
+      poller = new AbstractSystemPoller();
+    }
 #endif
 #endif
 
@@ -222,11 +242,13 @@ void KIdleTimePrivate::unloadCurrentSystem()
     if (!poller.isNull()) {
         poller.data()->unloadPoller();
 #if HAVE_XSYNC
-        if (qobject_cast<XSyncBasedPoller *>(poller.data()) == 0) {
+	if (m_isX11) {
+	  if (qobject_cast<XSyncBasedPoller *>(poller.data()) == 0) {
 #endif
             poller.data()->deleteLater();
 #if HAVE_XSYNC
-        }
+	    }
+	  }
 #endif
     }
 }
diff --git a/src/kidletime.h b/src/kidletime.h
index 0369f29..fcdf79e 100644
--- a/src/kidletime.h
+++ b/src/kidletime.h
@@ -189,7 +189,7 @@ private:
 
     Q_PRIVATE_SLOT(d_func(), void _k_resumingFromIdle())
     Q_PRIVATE_SLOT(d_func(), void _k_timeoutReached(int))
-
+    bool m_isX11;
 };
 
 #endif /* KIDLETIME_H */
