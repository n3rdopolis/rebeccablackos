diff --git a/applets/pager/plugin/pager.cpp b/applets/pager/plugin/pager.cpp
index 22c6ca2..53a38e0 100644
--- a/applets/pager/plugin/pager.cpp
+++ b/applets/pager/plugin/pager.cpp
@@ -72,9 +72,12 @@ Pager::Pager(QObject *parent)
       , m_isX11(QX11Info::isPlatformX11())
 #endif
 {
-    NETRootInfo info(QX11Info::connection(), NET::NumberOfDesktops | NET::DesktopNames, NET::WM2DesktopLayout);
-    m_rows = info.desktopLayoutColumnsRows().height();
-
+#if HAVE_X11
+    if (m_isX11) {
+      NETRootInfo info(QX11Info::connection(), NET::NumberOfDesktops | NET::DesktopNames, NET::WM2DesktopLayout);
+      m_rows = info.desktopLayoutColumnsRows().height();
+    }
+#endif
     // initialize with a decent default
     m_desktopCount = qMax(1, KWindowSystem::numberOfDesktops());
 
@@ -352,6 +355,10 @@ void Pager::updateSizes()
 
 void Pager::recalculateWindowRects()
 {
+    if (!m_isX11) {
+        return;
+    }
+#if HAVE_X11
     NETRootInfo info(QX11Info::connection(), NET::NumberOfDesktops | NET::DesktopNames, NET::WM2DesktopLayout);
     m_rows = info.desktopLayoutColumnsRows().height();
 
@@ -363,7 +370,6 @@ void Pager::recalculateWindowRects()
     QList<WId> windows = KWindowSystem::stackingOrder();
     m_pagerModel->clearWindowRects();
 
-#if HAVE_X11
     foreach (WId window, windows) {
         KWindowInfo info = KWindowSystem::windowInfo(window, NET::WMGeometry | NET::WMFrameExtents |
                                                              NET::WMWindowType | NET::WMDesktop |
@@ -438,6 +444,10 @@ void Pager::currentActivityChanged(const QString &activity)
 
 void Pager::numberOfDesktopsChanged(int num)
 {
+    if (!m_isX11) {
+        return;
+    }
+#if HAVE_X11
     if (num < 1) {
         return; // refuse to update to zero desktops
     }
@@ -453,6 +463,7 @@ void Pager::numberOfDesktopsChanged(int num)
     m_pagerModel->clearDesktopRects();
     recalculateGridSizes(m_rows);
     recalculateWindowRects();
+#endif
 }
 
 void Pager::desktopNamesChanged()
@@ -464,12 +475,17 @@ void Pager::desktopNamesChanged()
 
 void Pager::windowChanged(WId id, const unsigned long* dirty)
 {
+    if (!m_isX11) {
+        return;
+    }
     Q_UNUSED(id)
+#if HAVE_X11
 
     if (dirty[NETWinInfo::PROTOCOLS] & (NET::WMGeometry | NET::WMDesktop) ||
         dirty[NETWinInfo::PROTOCOLS2] & NET::WM2Activities) {
         startTimer();
     }
+#endif
 }
 
 void Pager::desktopsSizeChanged()
