diff --git a/src/libply-splash-core/ply-device-manager.c b/src/libply-splash-core/ply-device-manager.c
index ad1f317..4c43d3d 100644
--- a/src/libply-splash-core/ply-device-manager.c
+++ b/src/libply-splash-core/ply-device-manager.c
@@ -736,7 +736,13 @@ ply_device_manager_new (const char                *default_tty,
         manager->loop = NULL;
         manager->terminals = ply_hashtable_new (ply_hashtable_string_hash, ply_hashtable_string_compare);
         manager->renderers = ply_hashtable_new (ply_hashtable_string_hash, ply_hashtable_string_compare);
-        manager->local_console_terminal = ply_terminal_new (default_tty);
+        /* If there are no TTYs and the drm backend exists and is usable, don't fall back to using a serial console. */
+        if (!ply_character_device_exists ("/dev/tty0") && access (PLYMOUTH_PLUGIN_PATH "renderers/drm.so", F_OK) == 0 &&
+            ply_path_match_exists ("/dev/dri/card*")) {
+                manager->local_console_terminal = NULL;
+        } else {
+                manager->local_console_terminal = ply_terminal_new (default_tty);
+        }
         manager->input_devices = ply_hashtable_new(ply_hashtable_string_hash, ply_hashtable_string_compare);
         manager->xkb_context = xkb_context_new(XKB_CONTEXT_NO_FLAGS);
         manager->xkb_keymap = xkb_keymap_new_from_names(manager->xkb_context, get_xkb_layout_description(), XKB_KEYMAP_COMPILE_NO_FLAGS);
diff --git a/src/libply/ply-utils.c b/src/libply/ply-utils.c
index f457579..7d489cb 100644
--- a/src/libply/ply-utils.c
+++ b/src/libply/ply-utils.c
@@ -48,6 +48,7 @@
 #include <time.h>
 #include <linux/fs.h>
 #include <linux/vt.h>
+#include <glob.h>
 
 #include <dlfcn.h>
 
@@ -498,6 +499,17 @@ ply_restore_errno (void)
         errno = errno_stack[errno_stack_position];
 }
 
+bool
+ply_path_match_exists (const char *file)
+{
+        glob_t gstruct;
+
+        if (!glob (file, GLOB_ERR, NULL, &gstruct))
+                return true;
+
+        return false;
+}
+
 bool
 ply_directory_exists (const char *dir)
 {
diff --git a/src/libply/ply-utils.h b/src/libply/ply-utils.h
index 7572cca..6a2db35 100644
--- a/src/libply/ply-utils.h
+++ b/src/libply/ply-utils.h
@@ -91,6 +91,7 @@ double ply_get_timestamp (void);
 void ply_save_errno (void);
 void ply_restore_errno (void);
 
+bool ply_path_match_exists (const char *file);
 bool ply_directory_exists (const char *dir);
 bool ply_file_exists (const char *file);
 bool ply_character_device_exists (const char *device);
diff --git a/src/main.c b/src/main.c
index daf2524..fcb3683 100644
--- a/src/main.c
+++ b/src/main.c
@@ -1990,6 +1990,10 @@ initialize_environment (state_t *state)
         if (!state->default_tty)
                 if (getenv ("DISPLAY") != NULL && access (PLYMOUTH_PLUGIN_PATH "renderers/x11.so", F_OK) == 0)
                         state->default_tty = "/dev/tty";
+                /* If there are no TTYs and the drm backend exists and is usable, don't fall back to using a serial console. */
+                if (!ply_character_device_exists ("/dev/tty0") && access (PLYMOUTH_PLUGIN_PATH "renderers/drm.so", F_OK) == 0 &&
+                    ply_path_match_exists ("/dev/dri/card*"))
+                        state->default_tty = "/dev/tty";
         if (!state->default_tty) {
                 if (state->mode == PLY_BOOT_SPLASH_MODE_SHUTDOWN ||
                     state->mode == PLY_BOOT_SPLASH_MODE_REBOOT)
@@ -2350,6 +2354,11 @@ main (int    argc,
         find_system_default_splash (&state);
         find_distribution_default_splash (&state);
 
+        /* If there are no TTYs and the drm backend exists and is usable, don't fall back to using a serial console. */
+        if (!ply_character_device_exists ("/dev/tty0") && access (PLYMOUTH_PLUGIN_PATH "renderers/drm.so", F_OK) == 0 &&
+            ply_path_match_exists ("/dev/dri/card*"))
+                device_manager_flags |= PLY_DEVICE_MANAGER_FLAGS_IGNORE_SERIAL_CONSOLES;
+
         if (ply_kernel_command_line_has_argument ("plymouth.ignore-serial-consoles") ||
             ignore_serial_consoles == true)
                 device_manager_flags |= PLY_DEVICE_MANAGER_FLAGS_IGNORE_SERIAL_CONSOLES;
