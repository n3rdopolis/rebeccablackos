21c21
< #The main server it displays on is refered to as the loginmanagerdisplay. it runs as non root, as well as the zenity dialogs
---
> #The main server it displays on is refered to as the loginmanagerdisplay. it runs as non root, as well as the kdialog dialogs
23c23
< #It depends on zenity kbd, weston, and expect
---
> #It depends on kdialog kbd, weston, and expect
88c88
<   #These scripts are small utilities that send the approriate commands to the waylandloginmanager's FIFO. They need to be configured in the launchers of /etc/loginmanagerdisplay/weston.ini. It's how the user interacts with the waylandloginmanager on the loginmanagerdisplay (other then the zenity dialogs)
---
>   #These scripts are small utilities that send the approriate commands to the waylandloginmanager's FIFO. They need to be configured in the launchers of /etc/loginmanagerdisplay/weston.ini. It's how the user interacts with the waylandloginmanager on the loginmanagerdisplay (other then the kdialog dialogs)
577c577
<   #User that the zenity dialogs and the loginmanagerdisplay (weston instance for the waylandloginmanager runs as
---
>   #User that the kdialog dialogs and the loginmanagerdisplay (weston instance for the waylandloginmanager runs as
629a630,635
>   #Create home folder for kdialog
>   mkdir -p /run/waylandloginmanager/home
>   export HOME=/run/waylandloginmanager/home
>   chmod 700 /run/waylandloginmanager/home
>   chown $LOGINMANAGERDISPLAYUSER /run/waylandloginmanager/home
> 
731c737,738
<   export GDK_BACKEND=wayland
---
>   export QT_QPA_PLATFORM=wayland
>   export QT_STYLE_OVERRIDE=oxygen
754c761
<   ZENITYCMD="runuser -u $LOGINMANAGERDISPLAYUSER -m -- zenity"
---
>   KDIALOGCMD="runuser -u $LOGINMANAGERDISPLAYUSER -m -- kdialog"
1066c1073
< #This function takes three arguments. The first is the number of seconds to wait, and the second is the string to show in the dialog. it shows a Zenity dialog with a progress bar to count down the specified time, with the string. The third is the seat to display it on
---
> #This function takes three arguments. The first is the number of seconds to wait, and the second is the string to show in the dialog. it shows a dialog with a progress bar to count down the specified time, with the string. The third is the seat to display it on
1073,1082c1080
<   waitseconds=$1
<   displaystring="$2"
<   countseconds=0
<   while [[ $countseconds -lt $waitseconds ]]
<   do
<     percent=$(( $countseconds * 100 / $waitseconds ))
<     echo $percent
<     ((countseconds++))
<     $SLEEPCMD 1
<   done | $ZENITYCMD --width=450 --title="Login Manager" --no-cancel --progress --auto-close --text="$displaystring" 2>/dev/null
---
>   $KDIALOGCMD --passivepopup "$2" "$1" 2>/dev/null
1653c1651
<         $ZENITYCMD --width=500 --error --title "Session Selection" --text="$DEFAULTWSESSION set as default session for $SessionUser, but was not found" 2>/dev/null
---
>         $KDIALOGCMD --title="Session Selection" --error "$DEFAULTWSESSION set as default session for $SessionUser, but was not found" 2>/dev/null
1668c1666
<         WSESSIONPICKLIST+=$element$"#"${WSESSIONARRAY[$((8+element*10))]}"#"${WSESSIONARRAY[$((9+element*10))]}
---
>         WSESSIONPICKLIST+=$element"#"${WSESSIONARRAY[$((8+element*10))]}$'\t'$'\t'$'\t'${WSESSIONARRAY[$((9+element*10))]}
1670a1669,1671
>       IFS=$'\n'
>       WSESSIONPICKLIST=($WSESSIONPICKLIST)
>       unset IFS
1672,1674c1673,1675
<       #The zenity dialog then outputs the selected session's lines into the WSESSIONDATA variable. each collumn is a different aspect of the wsessions
<       WSESSIONNUMBER=$(echo "$WSESSIONPICKLIST" | $ZENITYCMD --title="Pick a Session..." --height=450 --width=630 --list --text "Select a Wayland Desktop Environment to use" --column sessionnumber --column Name --column Comment --hide-column=1 --print-column=1 2>/dev/null )
<       #Abort if the user selected cancel on the zenity dialog
---
>       #The dialog then outputs the selected session's lines into the WSESSIONDATA variable. each collumn is a different aspect of the wsessions
>       WSESSIONNUMBER=$($KDIALOGCMD --geometry=700x300+0+0 --title="Pick a Session..." --menu "Select a Wayland Desktop Environment to use" -- "${WSESSIONPICKLIST[@]}" 2>/dev/null )
>       #Abort if the user selected cancel on the dialog
1686c1687
<     $ZENITYCMD --width=500 --error --title "Session Selection" --text="No sessions are installed, configured correctly, or supported by the hardware in this seat." 2>/dev/null
---
>     $KDIALOGCMD --title="Session Selection" --error "No sessions are installed, configured correctly, or supported by the hardware in this seat." 2>/dev/null
1753c1754
<   $ZENITYCMD --title="Information" --no-wrap --info --text="This is a third party fan made distribution!
---
>   $KDIALOGCMD --title="System Information" --msgbox "This is a third party fan made distribution!
1779,1784d1779
<   #The session list variable is multiline, and used by a zenity dialog.
<   #line 1 is the session number
<   #line 2 is the TTY for the session
<   #line 3 is the PID of the session
<   #line 4 is the user name
<   #line 5 is the logind session id.
1807,1811c1802
<         SessionList+="$NumberOfSessions"$'\n'
<         SessionList+="${AllSessionIDs[$NumberOfSessions]}"$'\n'
<         SessionList+="${AllSessionPIDs[$NumberOfSessions]}"$'\n'
<         SessionList+="${AllSessionUsers[$NumberOfSessions]}"$'\n'
<         SessionList+="tty${AllSessionTTYs[$NumberOfSessions]}"
---
>         SessionList+="${AllSessionIDs[$NumberOfSessions]}"$'\n'"${AllSessionIDs[$NumberOfSessions]}"$'\t'"${AllSessionUsers[$NumberOfSessions]}"
1822,1827c1813
<   SessionList+=$'\n'
<   SessionList+=$'\n'
<   SessionList+="New Session..."$'\n'
<   SessionList+=$'\n'
< 
< 
---
>   SessionList+="New Session..."
1828a1815,1817
>   IFS=$'\n'
>   SessionList=($SessionList)
>   unset IFS
1832c1821
<   ChangeSession=$(echo "$SessionList"  | sed '$d'| $ZENITYCMD --title="Switch User" --height=450 --list --text "Select a running session to change into" --hide-header --column sessionid --column tty --column pid --column username --column ID --print-column=1 --hide-column=1,3,5 --separator="\n" 2>/dev/null )
---
>   ChangeSession=$($KDIALOGCMD --title="Switch User" --menu "Select a running session to change into" -- "${SessionList[@]}" 2>/dev/null )
1834c1823
<   #Abort if the user selected cancel on the zenity dialog
---
>   #Abort if the user selected cancel on the dialog
1863c1852
<         $ZENITYCMD --title="Switch User" --warning --text="The selected session was not found. The session may have quit." 2>/dev/null
---
>         $KDIALOGCMD --title="Switch User" --msgbox "The selected session was not found. The session may have quit." 2>/dev/null
2110c2099
<     #The display in the zenity dialog should be "Firstname Lastname    (loginname)"
---
>     #The display in the dialog should be "Firstname Lastname    (loginname)"
2113,2115c2102
<     #add the data to the USERLISTSTRING that gets sent into zenity. Line 1 is the display name, line 2 is the user login name, and then line 3 is the display name of the next user...
<     USERLISTSTRING+="$UserDisplayName"
<     USERLISTSTRING+=$'\n'
---
>     #add the data to the USERLISTSTRING that gets sent into kdialog. line 1 is the user login name, Line 2 is the display name, and then line 3 is the login of the next user...
2117a2105,2106
>     USERLISTSTRING+="$UserDisplayName"
>     USERLISTSTRING+=$'\n'
2120,2121d2108
<   USERLISTSTRING+="Enter User Name..."
<   USERLISTSTRING+=$'\n'
2122a2110,2111
>   USERLISTSTRING+=$'\n'
>   USERLISTSTRING+="Enter User Name..."
2123a2113,2116
>   #Convert the data to an array
>   IFS=$'\n'
>   USERLISTSTRING=($USERLISTSTRING)
>   unset IFS
2126c2119
<   LOGINUSER=$(echo "$USERLISTSTRING" | $ZENITYCMD --title="Username" --height=450 --list --text "Select a user from the list to log into."  --column users --column usernames --hide-column 2 --print-column 2 --hide-header --separator="\n" 2>/dev/null )
---
>   LOGINUSER=$($KDIALOGCMD --title="Username" --menu "Select a user from the list to log into." -- "${USERLISTSTRING[@]}" 2>/dev/null )
2129c2122
<   #Abort if the user selected cancel on the zenity dialog
---
>   #Abort if the user selected cancel on the dialog
2137c2130
<     LOGINUSER=$($ZENITYCMD --title="Username" --entry --text="Enter the User Name:" 2>/dev/null)
---
>     LOGINUSER=$($KDIALOGCMD --title="Username" --inputbox "Enter the User Name:" 2>/dev/null)
2139c2132
<     #Abort if the user selected cancel on the zenity dialog
---
>     #Abort if the user selected cancel on the dialog
2155c2148
<     USERPASSWORD=$( $ZENITYCMD --title="Password" --password --text "Type Password for $LOGINUSER" 2>/dev/null )
---
>     USERPASSWORD=$( $KDIALOGCMD --title="Password" --password "Type Password for $LOGINUSER" 2>/dev/null )
2157c2150
<     #Abort if the user selected cancel on the zenity dialog
---
>     #Abort if the user selected cancel on the dialog
2169c2162
<       $ZENITYCMD --warning --text="Invalid password for $LOGINUSER, or username invalid" 2>/dev/null
---
>       $KDIALOGCMD --title="Login Failed" --msgbox "Invalid password for $LOGINUSER, or username invalid" 2>/dev/null
2173c2166
<     $ZENITYCMD --warning --text="Not Enough TTYs!" 2>/dev/null
---
>     $KDIALOGCMD --title="System Error" --error "Not Enough TTYs!" 2>/dev/null
2179c2172
< #This function is called when the loginmanager_control FIFO recives the command "Leave". It brings up a zenity dialog for handling power options for the computer.
---
> #This function is called when the loginmanager_control FIFO recives the command "Leave". It brings up a dialog for handling power options for the computer.
2187c2180
<   #The first line is sent to the zenity dialog is the actual command it sets the ACTION variable to be. the second line is what it appears as in the Zenity dialog for the user.
---
>   #The first line is sent to the dialog is the actual command it sets the ACTION variable to be. the second line is what it appears as in the dialog for the user.
2243c2236,2242
<   ACTION=$(echo "$ACTIONSTRING" | $ZENITYCMD --title="Leave..." --height=450 --list  --hide-header --text="What do you want to do?" --separator="\n" --column 'action' --column 'useraction' --hide-column 1 --print-column=1  2>/dev/null )
---
> 
>   IFS=$'\n'
>   ACTIONSTRING=($ACTIONSTRING)
>   unset IFS
> 
>   ACTION=$($KDIALOGCMD --title="Leave..." --menu "What do you want to do?" -- "${ACTIONSTRING[@]}" 2>/dev/null )
> 
2245c2244
<   #Abort if the user selected cancel on the zenity dialog
---
>   #Abort if the user selected cancel on the dialog
2252c2251
<   $ZENITYCMD --width=450 --title="Leave..." --question --text="Are you sure you want to $ACTION" 2>/dev/null
---
>   $KDIALOGCMD --title="Leave..." --yesno "Are you sure you want to $ACTION" 2>/dev/null
2286c2285
<     $ZENITYCMD --title="Failure" --warning --text="Failed to $ACTION" 2>/dev/null
---
>     $KDIALOGCMD --title="Failure" --error "Failed to $ACTION" 2>/dev/null
2629c2628
<   #Abort if the user selected cancel on the zenity dialog
---
>   #Abort if the user selected cancel on the dialog
2654c2653
<     $ZENITYCMD --warning --text="Not Enough TTYs for autologin!" 2>/dev/null
---
>     $KDIALOGCMD --title="System Error" --error "Not Enough TTYs!" 2>/dev/null
2688c2687
<   ActionMenu="Login\nLogin...\n"
---
>   ActionMenu="Login"$'\n'"Login..."$'\n'
2692c2691
<     ActionMenu+="Switch\nSwitch User...\n"
---
>     ActionMenu+="Switch"$'\n'"Switch User..."$'\n'
2694c2693
<   ActionMenu+="Leave\nShutdown...\nInfo\nHelp..."
---
>   ActionMenu+="Leave"$'\n'"Shutdown..."$'\n'"Info"$'\n'"Help..."
2697c2696
<     ActionMenu+="\nDebug\nRoot Terminal..."
---
>     ActionMenu+=$'\n'"Debug"$'\n'"Root Terminal..."
2700c2699
<     ActionMenu+="\nDebug\nTerminal Login..."
---
>     ActionMenu+=$'\n'"Debug"$'\n'"Terminal Login..."
2702,2703c2701,2707
<   USERACTION=$(echo -e "$ActionMenu"|$ZENITYCMD  --title="Login Manager" --height=300 --hide-column 1 --separator="\n" --list --column action --column display --hide-header --text "Select an Action"  2>> /var/log/waylandloginmanager/loginmanagerdisplays/loginmanagerdisplay_"$SeatFileName".log; exit ${PIPESTATUS[1]})
< ZENITYSTATUS=$?
---
> 
>   IFS=$'\n'
>   ActionMenu=($ActionMenu)
>   unset IFS
> 
>   USERACTION=$($KDIALOGCMD --title="Login Manager" --menu "Select an Action" -- "${ActionMenu[@]}"  2>> /var/log/waylandloginmanager/loginmanagerdisplays/loginmanagerdisplay_"$SeatFileName".log)
>   DIALOGSTATUS=$?
2711,2712c2715,2716
<   #if zenity segfaults, then something is wrong. wait longer
<   if [[ $ZENITYSTATUS == 139 ]]
---
>   #if the dialog program segfaults, then something is wrong. wait longer
>   if [[ $DIALOGSTATUS == 139 ]]
2716c2720
<   exit $ZENITYSTATUS
---
>   exit $DIALOGSTATUS
