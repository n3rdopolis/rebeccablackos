#! /bin/bash
#    Copyright (c) 2012, 2013, 2014 nerdopolis (or n3rdopolis) <bluescreen_avenger@verzion.net>
#
#    This file is part of RebeccaBlackLinux.
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 2 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.

function SwitchBackExit
{
  echo -e "\nChange" > /run/waylandloginmanager/loginmanager_control
  exit
}

if [[ $1 == "--version" ]]
then
  echo "waylandloginmanager weston-launch addon"
  exit 255
fi

USER=$(id -u)
. /usr/bin/wlruntime_vars
BackendType=$(echo $BackendType | sed 's/^ *//;s/ *$//')
EnvironmentFile=$(echo $EnvironmentFile | sed 's/^ *//;s/ *$//')
if [[ -e $EnvironmentFile ]]
then
  EnvironmentFileData=$(awk '/^\[*\]$/{flag=0}flag;/^\[EnvironmentFile\]$/{flag=1}' $EnvironmentFile | awk -F \# '{print $1}')
  while read LINE
  do
    VARACTION=$(echo $LINE    | awk -F ' *@ *' '{print $1}' | awk -F ' *= *' '{print $1}' | sed 's/^ *//;s/ *$//')
    VARNAME=$(echo $LINE      | awk -F ' *@ *' '{print $1}' | awk -F ' *= *' '{print $2}' | sed 's/^ *//;s/ *$//')
    VARDATA=$(echo $LINE      | awk -F ' *@ *' '{print $1}' | awk -F ' *= *' '{print $3}' | sed 's/^ *//;s/ *$//')
    VARBACKEND=$(echo $LINE   | awk -F ' *@ *' '{print $2}' | sed 's/^ *//;s/ *$//')

    if [[ -z $VARBACKEND || $VARBACKEND == $BackendType ]]
    then

      if [[ $VARACTION == "set" ]]
      then
	export $VARNAME=$VARDATA
      fi

      if [[ $VARACTION == "unset" ]]
      then
	unset $VARNAME
      fi

    fi
  done < <(echo "$EnvironmentFileData")
fi

IFS=''
ArgArray=("$@")
unset IFS

#Clean up trailing white space
for (( element = 0 ; element < ${#ArgArray[@]} ; element++ ))
do
  ArgArray[$element]=$(echo "${ArgArray[$element]}" | sed 's/^ *//;s/ *$//')
done
SecondArg="${ArgArray[1]}"
if [[ "$SecondArg" == "@@" ]]
then
  Server="${ArgArray[0]}"

  if [[ $USER != 0 ]]
  then
    #Detrermine if the server is safe
    ServerApprovedCount=$(cat /etc/waylandservers | grep -c "^$Server$")
  else
    ServerApprovedCount=1
  fi

  #Only run if the server is safe
  if [[ $ServerApprovedCount == 0 ]]
  then 
    echo "Unapproved Wayland Server $Server attempted to Execute. Server binary path will need to be added to /etc/waylandservers in order to run."
    SwitchBackExit
  else 
    STARTTIME=$(date +%s)
    #Execute the Wayland server
    "${ArgArray[0]}" ${ArgArray[@]:2}
    ENDTIME=$(date +%s)
    RUNTIME=$((ENDTIME-STARTTIME))
    #If the server only ran for 5 seconds, assume it crashed, and switch back. This should cover the time it would take until RegisterSession in Waylandloginmanager handles it. If it is longer than 5 seconds, don't switch back as the user could have another session active.
    if [[ $RUNTIME < 5 ]]
    then
      SwitchBackExit
    fi
  fi
else
  weston-display-server ${ArgArray[@]}
fi