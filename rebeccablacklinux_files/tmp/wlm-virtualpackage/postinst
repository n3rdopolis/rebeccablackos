#!/bin/sh
#Based off the SDDM postinst file

set -e

. /usr/share/debconf/confmodule

THIS_PACKAGE=waylandloginmanager
DEFAULT_DISPLAY_MANAGER_FILE=/etc/X11/default-display-manager

# debconf is not a registry, so we only fiddle with the default file if it
# does not exist
if ! [ -e "$DEFAULT_DISPLAY_MANAGER_FILE" ]; then
    if db_get shared/default-x-display-manager; then
        if [ -z "$RET" ]; then
            RET="$THIS_PACKAGE"
        fi
        if [ "$THIS_PACKAGE" != "$RET" ]; then
            echo "Please be sure to run \"dpkg --configure $RET\"."
        fi
        if db_get "$DEFAULT_DISPLAY_MANAGER"/daemon_name; then
            echo "$RET" > "$DEFAULT_DISPLAY_MANAGER_FILE"
        fi
    fi
fi

# remove the displaced old default display manager file if it exists
if [ -e "$DEFAULT_DISPLAY_MANAGER_FILE.dpkg-tmp" ]; then
    rm "$DEFAULT_DISPLAY_MANAGER_FILE.dpkg-tmp"
fi

# debconf hangs if sddm gets started below without this
db_stop || true

DEFAULT_SERVICE=/etc/systemd/system/display-manager.service
# set default-display-manager systemd service link according to our config
if [ "$1" = configure ] && [ -d /etc/systemd/system/ ]; then
    if [ -e "$DEFAULT_DISPLAY_MANAGER_FILE" ]; then
        SERVICE=/lib/systemd/system/$(basename $(cat "$DEFAULT_DISPLAY_MANAGER_FILE")).service
        if [ -h "$DEFAULT_SERVICE" ] && [ $(readlink "$DEFAULT_SERVICE") = /dev/null ]; then
            echo "Display manager service is masked" >&2
        elif [ -e "$SERVICE" ]; then
            ln -sf "$SERVICE" "$DEFAULT_SERVICE"
        else
            echo "WARNING: $SERVICE is the selected default display manager but does not exist" >&2
            rm -f "$DEFAULT_SERVICE"
        fi
    else
        rm -f "$DEFAULT_SERVICE"
    fi
fi
 
